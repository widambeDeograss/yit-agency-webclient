import{r as v,j as n,g as $,e as I,T as E}from"./index-ux5oNEAr.js";import{P as f}from"./index-D92uPXsy.js";var u="Progress",d=100,[S,L]=$(u),[j,w]=S(u),g=v.forwardRef((e,r)=>{const{__scopeProgress:l,value:t=null,max:a,getValueLabel:b=y,...h}=e;(a||a===0)&&!p(a)&&console.error(R(`${a}`,"Progress"));const s=p(a)?a:d;t!==null&&!c(t,s)&&console.error(V(`${t}`,"Progress"));const o=c(t,s)?t:null,N=i(o)?b(o,s):void 0;return n.jsx(j,{scope:l,value:o,max:s,children:n.jsx(f.div,{"aria-valuemax":s,"aria-valuemin":0,"aria-valuenow":i(o)?o:void 0,"aria-valuetext":N,role:"progressbar","data-state":P(o,s),"data-value":o??void 0,"data-max":s,...h,ref:r})})});g.displayName=u;var m="ProgressIndicator",x=v.forwardRef((e,r)=>{const{__scopeProgress:l,...t}=e,a=w(m,l);return n.jsx(f.div,{"data-state":P(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...t,ref:r})});x.displayName=m;function y(e,r){return`${Math.round(e/r*100)}%`}function P(e,r){return e==null?"indeterminate":e===r?"complete":"loading"}function i(e){return typeof e=="number"}function p(e){return i(e)&&!isNaN(e)&&e>0}function c(e,r){return i(e)&&!isNaN(e)&&e<=r&&e>=0}function R(e,r){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${r}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${d}\`.`}function V(e,r){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${r}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${d} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var _=g,A=x;function T({className:e,value:r,...l}){return n.jsx(_,{"data-slot":"progress",className:I("bg-primary/20 relative h-2 w-full overflow-hidden rounded-full",e),...l,children:n.jsx(A,{"data-slot":"progress-indicator",className:"bg-primary h-full w-full flex-1 transition-all",style:{transform:`translateX(-${100-(r||0)}%)`}})})}class M extends E{constructor(){super("baseService")}getPolls(r){return this.get("/polls/polls/",r)}getPollDetail(r){return this.get(`/polls/polls/${r}/`)}createVote(r){return this.post("/polls/votes/",r)}}const O=new M;export{T as P,O as p};
